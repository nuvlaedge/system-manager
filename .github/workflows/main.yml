name: "NuvlaEdge Component Build"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'main'
    tags-ignore:
      - '*.*.*'
    paths:
      - 'code/system_manager/'
      - 'code/tests/'
      - '.github/workflows/main.yml'
  pull_request:
  workflow_dispatch:

jobs:
  # UnitTest job, necessary before building the Nuvladev Image
  unittests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install tox
        run: pip install tox

      - name: Run tox
        run: tox

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test-report.xml

  build-image:
    needs: 'unittests'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: SetUp QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        # if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm/v8,linux/arm64
          build-args: |
            GIT_BRANCH=${{ github.head_ref || github.ref_name }}
            GIT_BUILD_TIME=$(date --utc +%FT%T.%3NZ)
            GIT_COMMIT_ID=${{ github.sha }}
            GITHUB_RUN_NUMBER=${{ github.run_number }}
            GITHUB_RUN_ID=${{ github.run_id }}
            PROJECT_URL=${{ github.server_url }}/${{ github.repository }}
            PACKAGE_NAME=${{ env.PACKAGE_NAME }}

          tags: >
            nuvladev/${{ github.event.repository.name }}:${{ github.head_ref || github.ref_name }},
            nuvladev/${{ github.event.repository.name }}:latest
          push: ${{ github.event_name != 'pull_request' }}

  notify:
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - unittests
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          # Required Input
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
          # Optional Input
          icon_emoji: ':ghost:'
